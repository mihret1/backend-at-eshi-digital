


# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v4

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 16

#     - name: Install Dependencies
#       run: npm install

#     - name: Run Tests
#       run: npm test  
    
#     - name: Install Arachni
#       run: |
#        sudo apt-get update
#        sudo apt-get install -y arachni
       
#     - name: Run Arachni Scan
#       run: |
#         arachni http://localhost:3500 --report-save-path=arachni_report.afr

#     - name: Upload Arachni Scan Results
#       uses: actions/upload-artifact@v3
#       with:
#         name: arachni-results
#         path: arachni_report.afr
  
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: Install dependencies
#         run: npm install

#       - name: Build and deploy
#         run: npm run build && npm run deploy



name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build
      run: npm run build



  security:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: GitHub Code Scanning
      uses: github/codeql-action@v4

    - name: Install Arachni
      run: |
        sudo apt-get update
        sudo apt-get install -y arachni

    - name: Run Arachni
      run: |
        arachni http://localhost:3500 --report-save-path=arachni_report.afr

    - name: Install Snyk CLI
      run: |
        sudo npm install -g snyk

    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Run Snyk Scan
      run: snyk test
      
    - name: Run Snyk Test (Dependency Scanning)
      run: snyk test

    - name: Upload Snyk Test Results
      uses: snyk/actions/scan@v2
      with:
        fail-on-issues: true
   

    - name: Deploy to Production
      run: |
        # Add your deployment script here








        
